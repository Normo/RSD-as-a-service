import{_ as t,r as i,o as r,c as d,a as n,b as o,F as c,e as a,d as e}from"./app.5a1a9298.js";var l="/RSD-as-a-service/rsd-stack-220304.png";const h={},p=a('<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><h2 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies" aria-hidden="true">#</a> Dependencies</h2><p>To run the application locally you need to install the following dependencies:</p><ul><li>Docker</li></ul><h2 id="get-started" tabindex="-1"><a class="header-anchor" href="#get-started" aria-hidden="true">#</a> Get Started</h2><h3 id="monorepo" tabindex="-1"><a class="header-anchor" href="#monorepo" aria-hidden="true">#</a> Monorepo</h3><p>The RSD-as-a-Service project is a divided into different services included in the mono repo:</p><p>|-- authentication<br> |-- backend-postgrest<br> |-- data-migration<br> |-- database<br> |-- deployment<br> |-- documentation<br> |-- frontend<br> |-- nginx<br> |-- scrapers</p><h3 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a> Environment variables</h3>',9),u=e("The environment variables should be stored in a .env file, which is automatically loaded by docker-compose. To validate loading of env variables use "),m=n("code",null,"docker-compose config",-1),b=e(". More info about the use of environment variables in docker-compose is available at "),g={href:"https://docs.docker.com/compose/environment-variables/",target:"_blank",rel:"noopener noreferrer"},f=e("official documentation"),v=a(`<ul><li>copy the file <code>.env.example</code> to <code>.env</code> file at the root of the project</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># from project root dir</span>
<span class="token function">cp</span> .env.example .env
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>You need to modify the new .env file with the corresponding value secrets.</li><li>build local images</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># from project root dir</span>
<span class="token function">docker-compose</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="running-locally" tabindex="-1"><a class="header-anchor" href="#running-locally" aria-hidden="true">#</a> Running locally</h2><p>Run the command <code>docker-compose up</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># from project root dir</span>
<span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The application can be viewed at http://localhost</p><h3 id="logging-in-with-admin-rights" tabindex="-1"><a class="header-anchor" href="#logging-in-with-admin-rights" aria-hidden="true">#</a> Logging in with admin rights</h3><p>The default role assigned to a logged in user is <code>rsd_user</code>. To obtain the <code>rsd_admin</code> role, you need to update the <code>RSD_ADMIN_EMAIL_LIST</code> variable in <code>.env</code>.</p><h4 id="local-accounts" tabindex="-1"><a class="header-anchor" href="#local-accounts" aria-hidden="true">#</a> Local accounts</h4><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Local accounts should only be used in development mode.</p></div><p>If you activated local login by adding <code>LOCAL</code> to <code>RSD_AUTH_PROVIDERS</code>, admin rights can be obtained by adding <code>&lt;name&gt;@example.com</code> to <code>RSD_ADMIN_EMAIL_LIST</code>, where <code>&lt;names&gt;</code> is the name entered when logging in. Here is an example:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">RSD_AUTH_PROVIDERS</span><span class="token operator">=</span>LOCAL
<span class="token assign-left variable">RSD_ADMIN_EMAIL_LIST</span><span class="token operator">=</span>admin@example.com
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>If you now login as the user <code>admin</code>, you will be assigned the role <code>rsd_admin</code>.</p><h4 id="other-idps" tabindex="-1"><a class="header-anchor" href="#other-idps" aria-hidden="true">#</a> Other IDPs</h4>`,16),_=e("If you are using other IDPs, make sure to add the mail address that is being provided by the IDP. If you are using the SURFconext development instance, have a look at "),k={href:"https://idp.diy.surfconext.nl/showusers.php",target:"_blank",rel:"noopener noreferrer"},x=e("this list"),y=e(" to obtain the email addresses that are provided for the test accounts."),w=a(`<h3 id="frontend-with-hot-module-replacement-hmr" tabindex="-1"><a class="header-anchor" href="#frontend-with-hot-module-replacement-hmr" aria-hidden="true">#</a> Frontend with hot-module-replacement (HMR)</h3><p>To run the frontend in the development mode with the hot-module-replacement (HMR) you should start an additional instance of the frontend which will be available at http://localhost:3000</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># navigate to frontend folder</span>
<span class="token builtin class-name">cd</span> frontend
<span class="token comment"># install dependencies</span>
<span class="token function">yarn</span> <span class="token function">install</span>
<span class="token comment"># start fe in dev mode</span>
<span class="token function">yarn</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,3),D=e("More information about the frontend setup is "),I={href:"/frontend/README.md",target:"_blank",rel:"noopener noreferrer"},R=e("available in the frontend readme file"),S=e("."),T=a(`<h3 id="documentation-site" tabindex="-1"><a class="header-anchor" href="#documentation-site" aria-hidden="true">#</a> Documentation site</h3><p>The documentation site runs on GitHub Pages. Any changes inside this folder will trigger a GitHub action to deploy the changes automatically when merging a Pull Request to the main branch.</p><p>To run locally the documentation site, you need <code>nodejs</code> installed on your machine.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># navigate to frontend folder</span>
<span class="token builtin class-name">cd</span> documentation
<span class="token comment"># install dependencies</span>
<span class="token function">yarn</span> <span class="token function">install</span>
<span class="token comment"># start fe in dev mode</span>
<span class="token function">yarn</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>All documentation files written in Markdown are placed inside the <code>./documentation/docs/</code> folder.</p><p>You can edit the <code>navigation bar</code> and the <code>sidebar</code> from the <code>./doumentation/docs/.vuepress/config.js</code> file.</p><p>Any file <code>markdown file</code> added indie the <code>docs</code> folder will be available on built time.</p><h2 id="clear-remove-data-reset" tabindex="-1"><a class="header-anchor" href="#clear-remove-data-reset" aria-hidden="true">#</a> Clear/remove data (reset)</h2><p>To clear the database, if the database structure has changed or you need to run data migration again, run the command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down --volumes
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="tech-stack" tabindex="-1"><a class="header-anchor" href="#tech-stack" aria-hidden="true">#</a> Tech Stack</h2><p><img src="`+l+'" alt="image"></p>',12);function A(L,M){const s=i("ExternalLinkIcon");return r(),d(c,null,[p,n("p",null,[u,m,b,n("a",g,[f,o(s)])]),v,n("p",null,[_,n("a",k,[x,o(s)]),y]),w,n("p",null,[D,n("a",I,[R,o(s)]),S]),T],64)}var N=t(h,[["render",A],["__file","getting-started.html.vue"]]);export{N as default};
